name: Update GitHub Blog

on:
  workflow_dispatch:          # manual trigger from the Actions tab
  schedule:
    - cron: '0 2 * * *'      # optional nightly run (02:00‚ÄØUTC)

jobs:
  update:
    runs-on: ubuntu-latest
    # --------------------------------------------------------------
    # IMPORTANT: give the job write permission on the repo.
    # If you have a global `permissions:` block that restricts
    # access, make sure this job (or the whole workflow) includes:
    # --------------------------------------------------------------
    permissions:
      contents: write          # allows the GITHUB_TOKEN to push

    steps:
      # --------------------------------------------------------------
      # 1Ô∏è‚É£ Checkout the repository (without persisting the default token)
      # --------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false   # we‚Äôll push with our own token

      # --------------------------------------------------------------
      # 2Ô∏è‚É£ Set up Node.js (enable cache only if a lock file exists)
      # --------------------------------------------------------------
      - name: Set up Node.js
        id: node-setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Enable npm cache only when a lock file is present
          cache: ${{ (hashFiles('package-lock.json') != '' || hashFiles('yarn.lock') != '' ) && 'npm' || '' }}

      # --------------------------------------------------------------
      # 3Ô∏è‚É£ Install dependencies (npm or Yarn) ‚Äì works both ways
      # --------------------------------------------------------------
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "üîß npm lock detected ‚Äì installing with npm ci"
            npm ci                     # respects package-lock.json
          elif [ -f yarn.lock ]; then
            echo "üîß Yarn lock detected ‚Äì installing with Yarn"
            yarn install --frozen-lockfile
          else
            echo "‚ö†Ô∏è No lock file ‚Äì installing required packages only"
            npm install prettier --no-package-lock
          fi

      # --------------------------------------------------------------
      # 4Ô∏è‚É£ Run your script that updates the HTML page
      # --------------------------------------------------------------
      - name: Generate blog cards
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # optional, only if script talks to GitHub API
          GITHUB_USER: exo-exe                    # replace with your user/org
        run: node ./scripts/update-github-blog.js

      # --------------------------------------------------------------
      # 5Ô∏è‚É£ Commit and **push** the changes ‚Äì authenticated!
      # --------------------------------------------------------------
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # <-- the magic token
        run: |
          # Configure the bot identity (optional, just for nice commit metadata)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage only tracked files that changed
          git add -u

          # If nothing changed, exit cleanly
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
            exit 0
          fi

          # Commit
          git commit -m "ü§ñ Auto‚Äëupdate GitHub blog cards"

          # Push using the token embedded in the URL.
          # ${GITHUB_ACTOR} = the user that triggered the workflow (usually the bot)
          # ${GITHUB_TOKEN} = the secret that grants write access for this run
          git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" \
            HEAD:${{ github.ref_name }}
